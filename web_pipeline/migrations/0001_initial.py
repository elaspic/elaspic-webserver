# Generated by Django 3.1.3 on 2020-11-25 21:37

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [
        ("web_pipeline", "0001_initial"),
        ("web_pipeline", "0002_auto_20160905_2052"),
        ("web_pipeline", "0003_coremutationlocal_elaspic_version"),
        ("web_pipeline", "0004_interfacemutationlocal_elaspic_version"),
    ]

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CoreModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        db_column="domain_id", db_index=True, primary_key=True, serialize=False
                    ),
                ),
                ("protein_id", models.CharField(max_length=15)),
                ("domain_idx", models.IntegerField(db_index=True)),
                ("clan", models.CharField(db_column="pfam_clan", max_length=255)),
                ("name", models.CharField(db_column="pdbfam_name", db_index=True, max_length=255)),
                ("alignment_def", models.CharField(db_column="alignment_def", max_length=255)),
                ("data_path", models.TextField(blank=True, db_column="path_to_data")),
                (
                    "align_score",
                    models.IntegerField(blank=True, db_column="alignment_score", null=True),
                ),
                (
                    "align_coverage",
                    models.FloatField(blank=True, db_column="alignment_coverage", null=True),
                ),
                (
                    "template_errors",
                    models.TextField(blank=True, db_column="template_errors", null=True),
                ),
                ("domain_def", models.CharField(blank=True, max_length=255)),
                ("cath", models.CharField(blank=True, db_column="cath_id", max_length=255)),
                (
                    "seq_id",
                    models.FloatField(blank=True, db_column="alignment_identity", null=True),
                ),
                ("model_errors", models.TextField(blank=True, db_column="model_errors", null=True)),
                ("dope_score", models.FloatField(blank=True, db_column="norm_dope", null=True)),
                ("model_filename", models.CharField(blank=True, max_length=255)),
                ("alignment_filename", models.CharField(blank=True, max_length=255)),
                ("chain", models.CharField(max_length=1, null=True)),
                ("model_domain_def", models.CharField(max_length=255)),
            ],
            options={
                "ordering": ["id"],
                "abstract": False,
                "db_table": "elaspic_core_model",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CoreMutation",
            fields=[
                ("protein_id", models.CharField(max_length=15, primary_key=True, serialize=False)),
                ("domain_idx", models.IntegerField(db_index=True)),
                ("mut", models.CharField(db_column="mutation", max_length=8)),
                ("mut_date_modified", models.DateField()),
                ("model_filename_wt", models.CharField(max_length=255)),
                ("model_filename_mut", models.CharField(max_length=255)),
                (
                    "mut_errors",
                    models.TextField(blank=True, db_column="mutation_errors", null=True),
                ),
                (
                    "pdb_chain",
                    models.CharField(db_column="chain_modeller", max_length=1, null=True),
                ),
                (
                    "pdb_mut",
                    models.CharField(db_column="mutation_modeller", max_length=8, null=True),
                ),
                ("stability_energy_wt", models.TextField(null=True)),
                ("stability_energy_mut", models.TextField(null=True)),
                ("physchem_wt", models.CharField(max_length=255, null=True)),
                ("physchem_wt_ownchain", models.CharField(max_length=255, null=True)),
                ("physchem_mut", models.CharField(max_length=255, null=True)),
                ("physchem_mut_ownchain", models.CharField(max_length=255, null=True)),
                ("secondary_structure_wt", models.CharField(max_length=1, null=True)),
                ("secondary_structure_mut", models.CharField(max_length=1, null=True)),
                ("solvent_accessibility_wt", models.FloatField(blank=True, null=True)),
                ("solvent_accessibility_mut", models.FloatField(blank=True, null=True)),
                ("matrix_score", models.FloatField(blank=True, null=True)),
                ("provean_score", models.FloatField(blank=True, null=True)),
                ("ddG", models.FloatField(blank=True, db_column="ddg", null=True)),
            ],
            options={
                "abstract": False,
                "db_table": "elaspic_core_mutation",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DatabaseClinVar",
            fields=[
                (
                    "id",
                    models.PositiveIntegerField(db_column="id", primary_key=True, serialize=False),
                ),
                ("protein_id", models.CharField(db_column="uniprot_id", max_length=50)),
                ("mut", models.CharField(db_column="mutation", max_length=8)),
                ("variation", models.CharField(db_column="variation_name", max_length=50)),
            ],
            options={
                "managed": False,
                "db_table": "clinvar_mutation",
            },
        ),
        migrations.CreateModel(
            name="DatabaseCOSMIC",
            fields=[
                (
                    "id",
                    models.PositiveIntegerField(db_column="id", primary_key=True, serialize=False),
                ),
                ("protein_id", models.CharField(db_column="uniprot_id", max_length=50)),
                ("mut", models.CharField(db_column="mutation", max_length=8)),
                ("variation", models.CharField(db_column="variation_name", max_length=50)),
            ],
            options={
                "managed": False,
                "db_table": "cosmic_mutation",
            },
        ),
        migrations.CreateModel(
            name="DatabaseUniProt",
            fields=[
                (
                    "id",
                    models.PositiveIntegerField(db_column="id", primary_key=True, serialize=False),
                ),
                ("protein_id", models.CharField(db_column="uniprot_id", max_length=50)),
                ("mut", models.CharField(db_column="mutation", max_length=8)),
                ("variation", models.CharField(db_column="variation_name", max_length=50)),
            ],
            options={
                "managed": False,
                "db_table": "uniprot_mutation",
            },
        ),
        migrations.CreateModel(
            name="HGNCIdentifier",
            fields=[
                (
                    "identifierID",
                    models.CharField(
                        db_column="identifier_id",
                        db_index=True,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "identifierType",
                    models.CharField(db_column="identifier_type", db_index=True, max_length=20),
                ),
                (
                    "uniprotID",
                    models.CharField(db_column="uniprot_id", db_index=True, max_length=10),
                ),
            ],
            options={
                "managed": False,
                "db_table": "hgnc_identifiers",
            },
        ),
        migrations.CreateModel(
            name="InterfaceModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        db_column="interface_id", db_index=True, primary_key=True, serialize=False
                    ),
                ),
                ("protein_id_1", models.CharField(max_length=15)),
                ("protein_id_2", models.CharField(max_length=15)),
                ("data_path", models.TextField(blank=True, db_column="path_to_data")),
                (
                    "align_score1",
                    models.IntegerField(blank=True, db_column="alignment_score_1", null=True),
                ),
                (
                    "align_score2",
                    models.IntegerField(blank=True, db_column="alignment_score_2", null=True),
                ),
                (
                    "align_coverage_1",
                    models.IntegerField(blank=True, db_column="alignment_coverage_1", null=True),
                ),
                (
                    "align_coverage_2",
                    models.IntegerField(blank=True, db_column="alignment_coverage_2", null=True),
                ),
                ("cath1", models.CharField(blank=True, db_column="cath_id_1", max_length=255)),
                ("cath2", models.CharField(blank=True, db_column="cath_id_2", max_length=255)),
                (
                    "seq_id1",
                    models.FloatField(blank=True, db_column="alignment_identity_1", null=True),
                ),
                (
                    "seq_id2",
                    models.FloatField(blank=True, db_column="alignment_identity_2", null=True),
                ),
                ("errors", models.TextField(blank=True, db_column="template_errors", null=True)),
                ("model_domain_def_1", models.CharField(max_length=255)),
                ("model_domain_def_2", models.CharField(max_length=255)),
                ("model_errors", models.TextField(blank=True, null=True)),
                ("dope_score", models.FloatField(blank=True, db_column="norm_dope", null=True)),
                ("model_filename", models.CharField(blank=True, max_length=255)),
                ("alignment_filename_1", models.CharField(blank=True, max_length=255)),
                ("alignment_filename_2", models.CharField(blank=True, max_length=255)),
                ("aa1", models.TextField(blank=True, db_column="interacting_aa_1")),
                ("aa2", models.TextField(blank=True, db_column="interacting_aa_2")),
                ("chain_1", models.CharField(max_length=1, null=True)),
                ("chain_2", models.CharField(max_length=1, null=True)),
                ("interface_area_hydrophobic", models.FloatField(blank=True, null=True)),
                ("interface_area_hydrophilic", models.FloatField(blank=True, null=True)),
                ("interface_area_total", models.FloatField(blank=True, null=True)),
            ],
            options={
                "ordering": ["id"],
                "abstract": False,
                "db_table": "elaspic_interface_model",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="InterfaceMutation",
            fields=[
                ("protein_id", models.CharField(max_length=15, primary_key=True, serialize=False)),
                ("mut", models.CharField(db_column="mutation", max_length=8)),
                ("chain_idx", models.IntegerField()),
                ("mut_date_modified", models.DateField()),
                ("model_filename_wt", models.CharField(max_length=255)),
                ("model_filename_mut", models.CharField(max_length=255)),
                (
                    "mut_errors",
                    models.TextField(blank=True, db_column="mutation_errors", null=True),
                ),
                (
                    "pdb_chain",
                    models.CharField(db_column="chain_modeller", max_length=1, null=True),
                ),
                (
                    "pdb_mut",
                    models.CharField(db_column="mutation_modeller", max_length=8, null=True),
                ),
                ("stability_energy_wt", models.TextField(null=True)),
                ("stability_energy_mut", models.TextField(null=True)),
                ("analyse_complex_energy_wt", models.TextField(null=True)),
                ("analyse_complex_energy_mut", models.TextField(null=True)),
                ("physchem_wt", models.CharField(max_length=255, null=True)),
                ("physchem_wt_ownchain", models.CharField(max_length=255, null=True)),
                ("physchem_mut", models.CharField(max_length=255, null=True)),
                ("physchem_mut_ownchain", models.CharField(max_length=255, null=True)),
                ("secondary_structure_wt", models.CharField(max_length=1, null=True)),
                ("secondary_structure_mut", models.CharField(max_length=1, null=True)),
                ("solvent_accessibility_wt", models.FloatField(blank=True, null=True)),
                ("solvent_accessibility_mut", models.FloatField(blank=True, null=True)),
                ("contact_distance_wt", models.FloatField(blank=True, null=True)),
                ("contact_distance_mut", models.FloatField(blank=True, null=True)),
                ("matrix_score", models.FloatField(blank=True, null=True)),
                ("provean_score", models.FloatField(blank=True, null=True)),
                ("ddG", models.FloatField(blank=True, db_column="ddg", null=True)),
            ],
            options={
                "abstract": False,
                "db_table": "elaspic_interface_mutation",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Protein",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="protein_id", max_length=50, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(db_column="protein_name", max_length=50)),
                ("description", models.CharField(blank=True, max_length=255)),
                ("organism_name", models.CharField(blank=True, max_length=255)),
                ("seq", models.TextField(db_column="sequence")),
                ("provean_supset_file", models.TextField()),
                ("provean_supset_length", models.IntegerField()),
            ],
            options={
                "ordering": ["id"],
                "abstract": False,
                "db_table": "elaspic_sequence",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UniprotIdentifier",
            fields=[
                ("id", models.AutoField(db_index=True, primary_key=True, serialize=False)),
                (
                    "identifierID",
                    models.CharField(db_column="identifier_id", db_index=True, max_length=255),
                ),
                (
                    "identifierType",
                    models.CharField(db_column="identifier_type", db_index=True, max_length=20),
                ),
                (
                    "uniprotID",
                    models.CharField(db_column="uniprot_id", db_index=True, max_length=10),
                ),
            ],
            options={
                "managed": False,
                "db_table": "uniprot_identifier",
            },
        ),
        migrations.CreateModel(
            name="CoreModelLocal",
            fields=[
                (
                    "id",
                    models.AutoField(
                        db_column="domain_id", db_index=True, primary_key=True, serialize=False
                    ),
                ),
                ("protein_id", models.CharField(max_length=15)),
                ("domain_idx", models.IntegerField(db_index=True)),
                ("clan", models.CharField(db_column="pfam_clan", max_length=255)),
                ("name", models.CharField(db_column="pdbfam_name", db_index=True, max_length=255)),
                ("alignment_def", models.CharField(db_column="alignment_def", max_length=255)),
                ("data_path", models.TextField(blank=True, db_column="path_to_data")),
                (
                    "align_score",
                    models.IntegerField(blank=True, db_column="alignment_score", null=True),
                ),
                (
                    "align_coverage",
                    models.FloatField(blank=True, db_column="alignment_coverage", null=True),
                ),
                (
                    "template_errors",
                    models.TextField(blank=True, db_column="template_errors", null=True),
                ),
                ("domain_def", models.CharField(blank=True, max_length=255)),
                ("cath", models.CharField(blank=True, db_column="cath_id", max_length=255)),
                (
                    "seq_id",
                    models.FloatField(blank=True, db_column="alignment_identity", null=True),
                ),
                ("model_errors", models.TextField(blank=True, db_column="model_errors", null=True)),
                ("dope_score", models.FloatField(blank=True, db_column="norm_dope", null=True)),
                ("model_filename", models.CharField(blank=True, max_length=255)),
                ("alignment_filename", models.CharField(blank=True, max_length=255)),
                ("chain", models.CharField(max_length=1, null=True)),
                ("model_domain_def", models.CharField(max_length=255)),
            ],
            options={
                "ordering": ["id"],
                "abstract": False,
                "db_table": "elaspic_core_model_local",
            },
        ),
        migrations.CreateModel(
            name="InterfaceModelLocal",
            fields=[
                (
                    "id",
                    models.AutoField(
                        db_column="interface_id", db_index=True, primary_key=True, serialize=False
                    ),
                ),
                ("protein_id_1", models.CharField(max_length=15)),
                ("protein_id_2", models.CharField(max_length=15)),
                ("data_path", models.TextField(blank=True, db_column="path_to_data")),
                (
                    "align_score1",
                    models.IntegerField(blank=True, db_column="alignment_score_1", null=True),
                ),
                (
                    "align_score2",
                    models.IntegerField(blank=True, db_column="alignment_score_2", null=True),
                ),
                (
                    "align_coverage_1",
                    models.IntegerField(blank=True, db_column="alignment_coverage_1", null=True),
                ),
                (
                    "align_coverage_2",
                    models.IntegerField(blank=True, db_column="alignment_coverage_2", null=True),
                ),
                ("cath1", models.CharField(blank=True, db_column="cath_id_1", max_length=255)),
                ("cath2", models.CharField(blank=True, db_column="cath_id_2", max_length=255)),
                (
                    "seq_id1",
                    models.FloatField(blank=True, db_column="alignment_identity_1", null=True),
                ),
                (
                    "seq_id2",
                    models.FloatField(blank=True, db_column="alignment_identity_2", null=True),
                ),
                ("errors", models.TextField(blank=True, db_column="template_errors", null=True)),
                ("model_domain_def_1", models.CharField(max_length=255)),
                ("model_domain_def_2", models.CharField(max_length=255)),
                ("model_errors", models.TextField(blank=True, null=True)),
                ("dope_score", models.FloatField(blank=True, db_column="norm_dope", null=True)),
                ("model_filename", models.CharField(blank=True, max_length=255)),
                ("alignment_filename_1", models.CharField(blank=True, max_length=255)),
                ("alignment_filename_2", models.CharField(blank=True, max_length=255)),
                ("aa1", models.TextField(blank=True, db_column="interacting_aa_1")),
                ("aa2", models.TextField(blank=True, db_column="interacting_aa_2")),
                ("chain_1", models.CharField(max_length=1, null=True)),
                ("chain_2", models.CharField(max_length=1, null=True)),
                ("interface_area_hydrophobic", models.FloatField(blank=True, null=True)),
                ("interface_area_hydrophilic", models.FloatField(blank=True, null=True)),
                ("interface_area_total", models.FloatField(blank=True, null=True)),
                (
                    "domain1",
                    models.ForeignKey(
                        db_column="domain_id_1",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="p1",
                        to="web_pipeline.coremodellocal",
                    ),
                ),
                (
                    "domain2",
                    models.ForeignKey(
                        db_column="domain_id_2",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="p2",
                        to="web_pipeline.coremodellocal",
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
                "abstract": False,
                "db_table": "elaspic_interface_model_local",
            },
        ),
        migrations.CreateModel(
            name="Job",
            fields=[
                ("jobID", models.CharField(max_length=10, primary_key=True, serialize=False)),
                ("dateRun", models.DateTimeField(auto_now_add=True)),
                ("dateFinished", models.DateTimeField(blank=True, null=True)),
                ("dateVisited", models.DateTimeField(auto_now_add=True)),
                ("isDone", models.BooleanField(default=False)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("localID", models.CharField(blank=True, max_length=50, null=True)),
                ("browser", models.TextField(blank=True)),
            ],
            options={
                "ordering": ["jobID"],
                "get_latest_by": "dateRun",
                "db_table": "jobs",
            },
        ),
        migrations.CreateModel(
            name="Mut",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("protein", models.CharField(db_index=True, max_length=50)),
                ("mut", models.CharField(max_length=8)),
                ("chain", models.SmallIntegerField(blank=True, null=True)),
                (
                    "affectedType",
                    models.CharField(
                        blank=True,
                        choices=[("NO", "None"), ("CO", "Core"), ("IN", "Interaction")],
                        max_length=2,
                    ),
                ),
                ("dateAdded", models.DateTimeField(auto_now_add=True)),
                ("dateFinished", models.DateTimeField(blank=True, null=True)),
                ("status", models.CharField(default="queued", max_length=12)),
                ("rerun", models.SmallIntegerField(default=0)),
                ("taskId", models.CharField(blank=True, max_length=50)),
                ("error", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "muts",
                "index_together": {("protein", "mut")},
            },
        ),
        migrations.CreateModel(
            name="ProteinLocal",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="protein_id", max_length=50, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(db_column="protein_name", max_length=50)),
                ("description", models.CharField(blank=True, max_length=255)),
                ("organism_name", models.CharField(blank=True, max_length=255)),
                ("seq", models.TextField(db_column="sequence")),
                ("provean_supset_file", models.TextField()),
                ("provean_supset_length", models.IntegerField()),
            ],
            options={
                "ordering": ["id"],
                "abstract": False,
                "db_table": "elaspic_sequence_local",
            },
        ),
        migrations.CreateModel(
            name="JobToMut",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("inputIdentifier", models.CharField(max_length=70)),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="web_pipeline.job"
                    ),
                ),
                (
                    "mut",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="web_pipeline.mut"
                    ),
                ),
            ],
            options={
                "db_table": "job_to_mut",
            },
        ),
        migrations.AddField(
            model_name="job",
            name="muts",
            field=models.ManyToManyField(
                related_name="jobs", through="web_pipeline.JobToMut", to="web_pipeline.Mut"
            ),
        ),
        migrations.AddField(
            model_name="coremodellocal",
            name="interactions",
            field=models.ManyToManyField(
                blank=True,
                through="web_pipeline.InterfaceModelLocal",
                to="web_pipeline.CoreModelLocal",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="coremodellocal",
            unique_together={("protein_id", "domain_idx")},
        ),
        migrations.CreateModel(
            name="CoreMutationLocal",
            fields=[
                ("protein_id", models.CharField(max_length=15, primary_key=True, serialize=False)),
                ("domain_idx", models.IntegerField(db_index=True)),
                ("mut", models.CharField(db_column="mutation", max_length=8)),
                ("mut_date_modified", models.DateField()),
                ("model_filename_wt", models.CharField(max_length=255)),
                ("model_filename_mut", models.CharField(max_length=255)),
                (
                    "mut_errors",
                    models.TextField(blank=True, db_column="mutation_errors", null=True),
                ),
                (
                    "pdb_chain",
                    models.CharField(db_column="chain_modeller", max_length=1, null=True),
                ),
                (
                    "pdb_mut",
                    models.CharField(db_column="mutation_modeller", max_length=8, null=True),
                ),
                ("stability_energy_wt", models.TextField(null=True)),
                ("stability_energy_mut", models.TextField(null=True)),
                ("physchem_wt", models.CharField(max_length=255, null=True)),
                ("physchem_wt_ownchain", models.CharField(max_length=255, null=True)),
                ("physchem_mut", models.CharField(max_length=255, null=True)),
                ("physchem_mut_ownchain", models.CharField(max_length=255, null=True)),
                ("secondary_structure_wt", models.CharField(max_length=1, null=True)),
                ("secondary_structure_mut", models.CharField(max_length=1, null=True)),
                ("solvent_accessibility_wt", models.FloatField(blank=True, null=True)),
                ("solvent_accessibility_mut", models.FloatField(blank=True, null=True)),
                ("matrix_score", models.FloatField(blank=True, null=True)),
                ("provean_score", models.FloatField(blank=True, null=True)),
                ("ddG", models.FloatField(blank=True, db_column="ddg", null=True)),
                (
                    "model",
                    models.ForeignKey(
                        db_column="domain_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="muts",
                        to="web_pipeline.coremodellocal",
                    ),
                ),
                ("elaspic_version", models.CharField(max_length=255, null=True)),
            ],
            options={
                "abstract": False,
                "db_table": "elaspic_core_mutation_local",
                "unique_together": {("protein_id", "model", "mut")},
                "index_together": {("protein_id", "mut")},
            },
        ),
        migrations.CreateModel(
            name="InterfaceMutationLocal",
            fields=[
                ("protein_id", models.CharField(max_length=15, primary_key=True, serialize=False)),
                ("mut", models.CharField(db_column="mutation", max_length=8)),
                ("chain_idx", models.IntegerField()),
                ("mut_date_modified", models.DateField()),
                ("model_filename_wt", models.CharField(max_length=255)),
                ("model_filename_mut", models.CharField(max_length=255)),
                (
                    "mut_errors",
                    models.TextField(blank=True, db_column="mutation_errors", null=True),
                ),
                (
                    "pdb_chain",
                    models.CharField(db_column="chain_modeller", max_length=1, null=True),
                ),
                (
                    "pdb_mut",
                    models.CharField(db_column="mutation_modeller", max_length=8, null=True),
                ),
                ("stability_energy_wt", models.TextField(null=True)),
                ("stability_energy_mut", models.TextField(null=True)),
                ("analyse_complex_energy_wt", models.TextField(null=True)),
                ("analyse_complex_energy_mut", models.TextField(null=True)),
                ("physchem_wt", models.CharField(max_length=255, null=True)),
                ("physchem_wt_ownchain", models.CharField(max_length=255, null=True)),
                ("physchem_mut", models.CharField(max_length=255, null=True)),
                ("physchem_mut_ownchain", models.CharField(max_length=255, null=True)),
                ("secondary_structure_wt", models.CharField(max_length=1, null=True)),
                ("secondary_structure_mut", models.CharField(max_length=1, null=True)),
                ("solvent_accessibility_wt", models.FloatField(blank=True, null=True)),
                ("solvent_accessibility_mut", models.FloatField(blank=True, null=True)),
                ("contact_distance_wt", models.FloatField(blank=True, null=True)),
                ("contact_distance_mut", models.FloatField(blank=True, null=True)),
                ("matrix_score", models.FloatField(blank=True, null=True)),
                ("provean_score", models.FloatField(blank=True, null=True)),
                ("ddG", models.FloatField(blank=True, db_column="ddg", null=True)),
                (
                    "model",
                    models.ForeignKey(
                        db_column="interface_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="muts",
                        to="web_pipeline.interfacemodellocal",
                    ),
                ),
                ("elaspic_version", models.CharField(max_length=255, null=True)),
            ],
            options={
                "abstract": False,
                "db_table": "elaspic_interface_mutation_local",
            },
        ),
    ]
